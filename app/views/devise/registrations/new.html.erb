<%= form_for(resource, as: resource_name, url: registration_path(resource_name), html: { class: "needs-validation", novalidate: true }) do |f| %>
  <%= devise_error_messages! %>

  <div class="mb-3">
    <%= f.label :first_name, class: 'form-label' %>
    <%= f.text_field :first_name, class: 'form-control', required: true %>
    <div class="invalid-feedback">
      Please enter your first name.
    </div>
  </div>

  <div class="mb-3">
    <%= f.label :last_name, class: 'form-label' %>
    <%= f.text_field :last_name, class: 'form-control', required: true %>
    <div class="invalid-feedback">
      Please enter your last name.
    </div>
  </div>

  <div class="mb-3">
    <%= f.label :email, class: 'form-label' %>
    <%= f.email_field :email, autofocus: true, class: 'form-control', required: true %>
    <div class="invalid-feedback">
      Please enter a valid email address.
    </div>
  </div>

  <div class="mb-3">
    <%= f.label :password, class: 'form-label' %>
    <% if @minimum_password_length %>
      <small class="form-text text-muted"><em>(<%= @minimum_password_length %> characters minimum)</em></small>
    <% end %>
    <%= f.password_field :password, autocomplete: "off", class: 'form-control', required: true %>
    <div class="invalid-feedback">
      Please enter a password.
    </div>
  </div>

  <div class="mb-3">
    <%= f.label :password_confirmation, class: 'form-label' %>
    <%= f.password_field :password_confirmation, autocomplete: "off", class: 'form-control', required: true %>
    <div class="invalid-feedback">
      Please confirm your password.
    </div>
  </div>

  <div class="mb-3">
    <%= f.submit "Sign up", class: "btn btn-primary" %>
  </div>
<% end %>

<%= render "devise/shared/links" %>

<script>
  // Example starter JavaScript for disabling form submissions if there are invalid fields
  (function () {
    'use strict'

    // Fetch all the forms we want to apply custom Bootstrap validation styles to
    var forms = document.querySelectorAll('.needs-validation')

    // Loop over them and prevent submission
    Array.prototype.slice.call(forms)
      .forEach(function (form) {
        form.addEventListener('submit', function (event) {
          if (!form.checkValidity()) {
            event.preventDefault()
            event.stopPropagation()
          }

          form.classList.add('was-validated')
        }, false)
      })
  })()
</script>
